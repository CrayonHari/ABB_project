version: '3.8'

networks:
  app-network:
    driver: bridge

services:
  frontend:
    build:
      # Goes up one level, then into the 'frontend' folder
      context: ../frontend
      dockerfile: Dockerfile
    container_name: frontend-container
    ports:
      - "8080:80"
    networks:
      - app-network
    depends_on:
      - production-backend

  production-backend:
    build:
      # Looks for a Dockerfile in the './ProductionBackend' subfolder
      context: ./ProductionBackend
      dockerfile: Dockerfile
    container_name: production-backend-container
    ports:
      - "8081:8080"
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:8080
      MLService__BaseUrl: http://ml-service:8000
    networks:
      - app-network
    depends_on:
      - ml-service

  ml-service:
    build:
      # Looks for a Dockerfile in the './ml_service' subfolder
      context: ./ml_service
      dockerfile: Dockerfile
    container_name: ml-service-container
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network
